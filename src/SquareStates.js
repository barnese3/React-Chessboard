// initially declaring all of the square states, the full ones indicate knight and bishop on the board
export let squareStates = [
	[0, 0, "empty"],
	[0, 1, "empty"],
	[0, 2, "empty"],
	[0, 3, "empty"],
	[0, 4, "empty"],
	[0, 5, "empty"],
	[0, 6, "empty"],
	[0, 7, "empty"],
	[1, 0, "empty"],
	[1, 1, "empty"],
	[1, 2, "empty"],
	[1, 3, "empty"],
	[1, 4, "empty"],
	[1, 5, "empty"],
	[1, 6, "empty"],
	[1, 7, "full"],
	[2, 0, "empty"],
	[2, 1, "empty"],
	[2, 2, "empty"],
	[2, 3, "empty"],
	[2, 4, "empty"],
	[2, 5, "empty"],
	[2, 6, "empty"],
	[2, 7, "full"],
	[3, 0, "empty"],
	[3, 1, "empty"],
	[3, 2, "empty"],
	[3, 3, "empty"],
	[3, 4, "empty"],
	[3, 5, "empty"],
	[3, 6, "empty"],
	[3, 7, "empty"],
	[4, 0, "empty"],
	[4, 1, "empty"],
	[4, 2, "empty"],
	[4, 3, "empty"],
	[4, 4, "empty"],
	[4, 5, "empty"],
	[4, 6, "empty"],
	[4, 7, "empty"],
	[5, 0, "empty"],
	[5, 1, "empty"],
	[5, 2, "empty"],
	[5, 3, "empty"],
	[5, 4, "empty"],
	[5, 5, "empty"],
	[5, 6, "empty"],
	[5, 7, "empty"],
	[6, 0, "empty"],
	[6, 1, "empty"],
	[6, 2, "empty"],
	[6, 3, "empty"],
	[6, 4, "empty"],
	[6, 5, "empty"],
	[6, 6, "empty"],
	[6, 7, "empty"],
	[7, 0, "empty"],
	[7, 1, "empty"],
	[7, 2, "empty"],
	[7, 3, "empty"],
	[7, 4, "empty"],
	[7, 5, "empty"],
	[7, 6, "empty"],
	[7, 7, "empty"]
]

// checks if a square is full or empty
export function findSquare(x, y) {
	for (let i=0; i<squareStates.length; i++) {
		if (squareStates[i][0] === x && squareStates[i][1] === y) {
			return squareStates[i];
		}
	}
}